[user]
	name = Sven Eberth
[core]
	editor = vim
[pull]
	rebase = true
[init]
	defaultBranch = main
[alias]
    # One letter alias for our most frequent commands.
    a = add
    b = branch
    c = commit
    d = diff
    f = fetch
    g = grep
    l = log
    m = merge
    o = checkout
    p = pull
    r = remote
    s = status
    w = whatchanged


    # Short aliases for our frequent commands.
    aa = add -A
    co = checkout
    co- = checkout -
    cob = checkout -b


    ### branch ###

    # branch - edit the description
    be = branch --edit-description

    # branch and only list branches whose tips are reachable from the specified commit (HEAD if not specified).
    bm = branch --merged

    # branch and only list branches whose tips are not reachable from the specified commit (HEAD if not specified).
    bnm = branch --no-merged


    ### diff ###

    # diff - show changes not yet staged
    dc = diff --cached

    # diff - show changes about to be commited
    ds = diff --staged

    # diff - show changes but by word, not line
    dw = diff --word-diff

    # diff deep - show changes with our preferred options. Also aliased as `diff-deep`.
    dd = diff --check --dirstat --find-copies --find-renames --histogram --color


    ### commit ###

    # commit - amend the tip of the current branch rather than creating a new commit.
    ca = commit --amend

    # commit - amend the tip of the current branch, and edit the message.
    cam = commit --amend --message

    # commit - amend the tip of the current branch, and do not edit the message.
    cane = commit --amend --no-edit

    # commit interactive
    ci = commit --interactive

    # commit with a message
    cm = commit --message

    # commit and stage changed files
    cc = commit -a


    ### log ###

    # log with a text-based graphical representation of the commit history.
    lg = log --graph

    # log with one line per item.
    lo = log --oneline

    # log with patch generation.
    lp = log --patch

    # log with first parent, useful for team branch that only accepts pull requests
    lfp = log --first-parent

    # log with items appearing in topological order, i.e. descendant commits are shown before their parents.
    lt = log --topo-order

    # log like - we like this summarization our key performance indicators. Also aliased as `log-like`.
    ll = log --graph --topo-order --abbrev-commit --date=short --decorate --all --boundary --pretty=format:'%Cgreen%ad %Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue[%cn]%Creset %Cblue%G?%Creset'


    ### pull ###

    # pull if a merge can be resolved as a fast-forward, otherwise fail.
    pf = pull --ff-only
    pr = pull --rebase
    pp = pull -p
    pps = pull -p --autostash


    ### submodule ###

    # submodule - enables foreign repositories to be embedded within a dedicated subdirectory of the source tree.
    sm = submodule

    # submodule init
    smi = submodule init

    # submodule add
    sma = submodule add

    # submodule sync
    sms = submodule sync

    # submodule update
    smu = submodule update

    # submodule update with initialize
    smui = submodule update --init

    # submodule update with initialize and recursive; this is useful to bring a submodule fully up to date.
    smuir = submodule update --init --recursive

    # tag always signed
    tag = tag -s

    # fetch from all remotes and prune local branches + tags
    fp = fetch --prune --prune-tags --all
